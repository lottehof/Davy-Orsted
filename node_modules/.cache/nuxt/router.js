import Vue from 'vue'
import Router from 'vue-router'
import { normalizeURL, decode } from 'ufo'
import { interopDefault } from './utils'
import scrollBehavior from './router.scrollBehavior.js'

const _48e408af = () => interopDefault(import('../../../pages/contact/index.vue' /* webpackChunkName: "pages/contact/index" */))
const _d048e0fc = () => interopDefault(import('../../../pages/hand-made/index.vue' /* webpackChunkName: "pages/hand-made/index" */))
const _8b4f1ad6 = () => interopDefault(import('../../../pages/jachthaven/index.vue' /* webpackChunkName: "pages/jachthaven/index" */))
const _9c4f43a4 = () => interopDefault(import('../../../pages/nieuws/index.vue' /* webpackChunkName: "pages/nieuws/index" */))
const _1a4cf5af = () => interopDefault(import('../../../pages/overons/index.vue' /* webpackChunkName: "pages/overons/index" */))
const _144a2559 = () => interopDefault(import('../../../pages/nieuws/_postId/index.vue' /* webpackChunkName: "pages/nieuws/_postId/index" */))
const _ddc30844 = () => interopDefault(import('../../../pages/index.vue' /* webpackChunkName: "pages/index" */))

const emptyFn = () => {}

Vue.use(Router)

export const routerOptions = {
  mode: 'history',
  base: '/',
  linkActiveClass: 'nuxt-link-active',
  linkExactActiveClass: 'nuxt-link-exact-active',
  scrollBehavior,

  routes: [{
    path: "/contact",
    component: _48e408af,
    name: "contact"
  }, {
    path: "/hand-made",
    component: _d048e0fc,
    name: "hand-made"
  }, {
    path: "/jachthaven",
    component: _8b4f1ad6,
    name: "jachthaven"
  }, {
    path: "/nieuws",
    component: _9c4f43a4,
    name: "nieuws"
  }, {
    path: "/overons",
    component: _1a4cf5af,
    name: "overons"
  }, {
    path: "/nieuws/:postId",
    component: _144a2559,
    name: "nieuws-postId"
  }, {
    path: "/",
    component: _ddc30844,
    name: "index"
  }],

  fallback: false
}

export function createRouter (ssrContext, config) {
  const base = (config.app && config.app.basePath) || routerOptions.base
  const router = new Router({ ...routerOptions, base  })

  // TODO: remove in Nuxt 3
  const originalPush = router.push
  router.push = function push (location, onComplete = emptyFn, onAbort) {
    return originalPush.call(this, location, onComplete, onAbort)
  }

  const resolve = router.resolve.bind(router)
  router.resolve = (to, current, append) => {
    if (typeof to === 'string') {
      to = normalizeURL(to)
    }
    return resolve(to, current, append)
  }

  return router
}
